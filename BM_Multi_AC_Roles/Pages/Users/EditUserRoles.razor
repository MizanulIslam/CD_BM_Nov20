@page "/manageuserrole/{userId}"

@inherits EditUserRolesBase
@using Microsoft.AspNetCore.Identity;
@using BM_Multi_AC_Roles.Services;
@using Microsoft.AspNetCore.Components;

@using BlazorComponents

@attribute [Authorize]

<h3>User Roles</h3>

@if (paginatedList.Items != null)
{

    <table class="table table-borderless table-responsive-md table-striped">
        <thead>
            <tr>
                <th>Action</th>

                <th><span @onclick="@(() => Sort("UserName"))">UserName </span> <i class="@(SortIndicator("UserName"))"></i></th>
                @* <th><span @onclick="@(() => Sort("FirstName"))">Name </span><i class="@(SortIndicator("FirstName"))"></i></th>*@
                @*<th>Name</th>*@
                @*<th>Email-ID</th>*@
                <th><span @onclick="@(() => Sort("Email"))">Email-ID </span><i class="@(SortIndicator("Email"))"></i></th>
                @*<th>Branch</th>*@
                @*   <th><span @onclick="@(() => Sort("Region"))">Branch </span><i class="@(SortIndicator("Region"))"></i></th>*@

            </tr>
        </thead>
        <tbody>
            @foreach (var employee in paginatedList.Items)
            {
                <tr>

                    <td>
                        <div class="btn-group-sm ">
                            <a class="btn btn-secondary " href="edituser/@employee.UserId">
                                <span class="oi oi-pencil"></span> Edit
                            </a>
                            <a type="" class="btn  btn-secondary" href="/@employee.UserId">
                                <span class="oi oi-eye" aria-hidden="true"></span> Details
                            </a>
                        </div>


                    </td>

                    <td>@employee.UserId</td>
                    <td>@employee.RoleId</td>


                </tr>

            }

        </tbody>
    </table>

    <Pager PageIndex=@paginatedList.PageIndex TotalPages=@paginatedList.TotalPages OnClick="PageIndexChanged"
           HasNextPage=@paginatedList.HasNextPage HasPreviousPage=@paginatedList.HasPreviousPage>
    </Pager>


}


@code {

}
